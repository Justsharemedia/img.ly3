import type CreativeEditorSDK from '@cesdk/cesdk-js';
import { PluginStatusMetadata } from './types';
/**
 * Sets the metadata for the plugin state.
 */
export declare function setPluginMetadata(cesdk: CreativeEditorSDK, id: number, metadata: PluginStatusMetadata): void;
/**
 * Returns the current metadata for the plugin state. If no metadata
 * is set on the given block, it will return an IDLE state.
 */
export declare function getPluginMetadata(cesdk: CreativeEditorSDK, id: number): PluginStatusMetadata;
/**
 * If plugin metadata is set, it will be cleared.
 */
export declare function clearPluginMetadata(cesdk: CreativeEditorSDK, id: number): void;
/**
 * Detect if the block has been duplicated with processed or processing
 * background removal. In that case the background removal state is still
 * valid, but blockId and fillId have changed.
 */
export declare function isDuplicate(cesdk: CreativeEditorSDK, blockId: number, metadata: PluginStatusMetadata): boolean;
/**
 * Fixes the metadata if the block has been duplicated, i.e. the blockId and
 * fillId will be updated to the current block/fill.
 *
 * Please note: Call this method only on duplicates (see isDuplicate).
 */
export declare function fixDuplicateMetadata(cesdk: CreativeEditorSDK, blockId: number): void;
/**
 * Check if the image has a consisten metadata state. A inconsistent state is
 * caused by outside changes of the fill data.
 *
 * @returns true if the metadata is consistent, false otherwise
 */
export declare function isMetadataConsistent(cesdk: CreativeEditorSDK, blockId: number): boolean;
/**
 * Recover the initial values to avoid the loading spinner and have the same
 * state as before the background removal was started.
 */
export declare function recoverInitialImageData(cesdk: CreativeEditorSDK, blockId: number): void;
